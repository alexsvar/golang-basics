// // GO THEORY 4 // //

// POINTER
// EXERCISE ARRAY'S REVERSE
//
//
//
//
//
//


// 
// // POINTER
// 

// Указатели - это переменные, которые хранят АДРЕС В ПАМЯТИ, а не адрес значения.
num := 10
numPointer := &num

// Использование указателей:
// 1. Убирает лишнее копирование
// 2. Мутирует значение

// Чтобы из адреса в памяти получить обратно значение нужно использовать символ *


///////
package main

import "fmt"

func main() {
	a := 5
	pointerA := &a
	res := double(a)
	fmt.Println(*pointerA)
	// переменная как значение со знаком * logs: 5
	// переменная как адрес в памяти logs: 0xc000104020

	fmt.Println(res)
}

func double(num int) int {
	return num * 2
}
///////


// 
// // EXERCISE ARRAY'S REVERSE
// 

///////
package main

import "fmt"

func main() {
	a := [4]int{1, 2, 3, 4}
	reverse(&a)
	fmt.Println(a)
}

func reverse(arr *[4]int) {
	for index, value := range *arr {
		(*arr)[len(arr) - 1 - index] = value
	}
}
///////